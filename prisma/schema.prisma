// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Profile {
  id             String   @id @default(uuid())
  email          String   @unique
  first_name     String
  last_name      String
  facebook_link  String?
  instagram_link String?
  x_link         String?
  profile_image  String   @default("https://i.ibb.co/0h7yZjx/user-1.png")
  created_at     DateTime @default(now())

  Recipe  Recipe[]
  Reviews Reviews[]
}

model Recipe {
  id          String   @id @default(uuid())
  title       String
  description String
  profile_id  String
  author      Profile  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  prep_time   String
  cook_time   String
  servings    Int
  ingredients String[]
  directions  String[]
  image_url   String

  Reviews Reviews[]
}

model Reviews {
  id         String   @id @default(uuid())
  recipe_id  String
  recipe     Recipe   @relation(fields: [recipe_id], references: [id], onDelete: Cascade)
  profile_id String
  author     Profile  @relation(fields: [profile_id], references: [id], onDelete: Cascade)
  created_at DateTime @default(now())
  rating     Int
  text       String
  image_url  String?
  upvote     String[]

  @@unique([recipe_id, profile_id])
}
